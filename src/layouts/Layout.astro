---
import { Picture } from "astro:assets";
import { GithubIcon, LinkedInIcon, BlueSkyIcon } from "~components/Icons";
import myImage from "../assets/me.png";
import Glow from "~components/Glow.astro";
import { ViewTransitions } from "astro:transitions";

interface Props {
    title: string;
    description?: string;
    sideWidth?: "full" | "half";
    headerImage?: string | {
        src: string;
        width: number;
        height: number;
        format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
    };
    className?: string;
}

const navItems: Array<{ name: string; href: string }> = [
    { name: "Home", href: "/" },
    { name: "Blog", href: "/blog" }
];

const socialMediaItems: Array<{ name: string; href: string; Icon: React.ReactNode | React.FC }> = [
    { name: "Github", href: "https://github.com/CodeVachon", Icon: GithubIcon },
    {
        name: "LinkedIn",
        href: "https://www.linkedin.com/in/christophervachon/",
        Icon: LinkedInIcon
    },
    { name: "BlueSky", href: "https://bsky.app/profile/christophervachon.ca", Icon: BlueSkyIcon }
];

const { title, description, sideWidth = "full", headerImage, className = "" } = Astro.props;

import "./../styles/global.css";
---

<html lang="en" class="dark h-full antialiased" style="color-scheme: dark;">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>{title}</title>
        <meta name="description" content={description} />
        <ViewTransitions />
    </head>
    <body
        class="flex h-screen min-w-[350px] flex-col bg-white text-slate-900 lg:flex-row lg:overflow-hidden dark:bg-gray-950 dark:text-slate-50"
    >
        <section
            class:list={[
                "relative sticky top-0 z-[100] flex items-center justify-center transition duration-500 lg:flex-shrink-0",
                sideWidth === "full" ? "lg:w-1/2" : "lg:w-1/3",
                "text-slate-50"
            ]}
        >
            <Glow />
            <div
                class="flex w-full items-center justify-between gap-4 p-4 lg:w-auto lg:flex-col lg:items-start lg:justify-center"
            >
                <header class="flex w-1/3 items-center gap-4 lg:w-full lg:flex-col lg:items-start">
                    <Picture
                        class="size-6 flex-shrink-0 rounded-full lg:size-64 lg:rounded-2xl"
                        src={myImage}
                        formats={["webp", "jpeg"]}
                        alt="A description of my image."
                    />

                    <h1 class="text-lg font-bold lg:text-2xl">Christopher Vachon</h1>
                </header>
                <nav class="w-1/3 lg:w-full">
                    <ul class="flex justify-center gap-6 lg:flex-col lg:gap-2">
                        {
                            navItems.map((item) => (
                                <li>
                                    <a
                                        href={item.href}
                                        class="text-white decoration-transparent transition duration-200 ease-in-out hover:text-white hover:decoration-primary"
                                    >
                                        {item.name}
                                    </a>
                                </li>
                            ))
                        }
                    </ul>
                </nav>
                <nav class="flex w-1/3 justify-end lg:w-full lg:justify-start">
                    <ol class="flex items-center gap-2">
                        {
                            socialMediaItems.map(({ name, href, Icon }) => (
                                <li>
                                    <a
                                        href={href}
                                        target="_blank"
                                        title={`Check me out on ${name}`}
                                        class="text-primary hover:text-white"
                                    >
                                        <Icon className="size-5" />
                                    </a>
                                </li>
                            ))
                        }
                    </ol>
                </nav>
            </div>
        </section>
        <section class="z-[90] flex h-full flex-grow flex-col lg:overflow-auto">
            <main class:list={["flex-grow p-6 lg:py-24", className]}>
                {
                    headerImage && (
                        <figure class="-mx-6 -mt-6 mb-6 max-w-[1200px] overflow-hidden lg:-mt-24">
                            <Picture
                                inferSize={true}
                                src={headerImage}
                                class="w-full object-cover md:aspect-video"
                                alt={title}
                                densities={[1.5, 2]}
                                formats={["webp", "jpeg"]}
                                fallbackFormat="jpeg"
                            />
                        </figure>
                    )
                }
                <slot />
            </main>
            <footer class="px-6 py-4">
                <p class="text-center text-xs text-gray-500 dark:text-gray-400">
                    &copy; {new Date().getFullYear()} Christopher Vachon. All rights reserved.
                </p>
            </footer>
        </section>
    </body>
</html>
