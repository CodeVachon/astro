---
import { Picture } from "astro:assets";
import { Icon } from "~components/Icons";
import type { IconName } from "~components/Icons";
import myImage from "../assets/me.png";
import Glow from "~components/Glow.astro";
import { ViewTransitions } from "astro:transitions";
import ThemeToggle from "../components/ThemeToggle.astro";
import { fade } from "astro:transitions";

interface Props {
    title: string;
    description?: string;
    sideWidth?: "full" | "half";
    headerImage?: {
        src: string;
        width: number;
        height: number;
        format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
    };
    className?: string;
    publishDate?: string;
}

const navItems: Array<{ name: string; href: string; className?: string }> = [
    { name: "Home", href: "/", className: "hidden lg:block" },
    { name: "Blog", href: "/blog" },
    { name: "Uses", href: "/uses" },
    { name: "Code", href: "/code" }
];

const socialMediaItems: Array<{ name: string; href: string; icon: IconName }> = [
    {
        name: "Github",
        href: "https://github.com/CodeVachon",
        icon: "github"
    },
    {
        name: "LinkedIn",
        href: "https://www.linkedin.com/in/christophervachon/",
        icon: "linkedin"
    },
    {
        name: "BlueSky",
        href: "https://bsky.app/profile/christophervachon.ca",
        icon: "blueSky"
    }
];

const {
    title,
    description,
    sideWidth = "full",
    headerImage,
    className = "",
    publishDate
} = Astro.props;

const canonical = new URL(Astro.url.pathname, Astro.site);
const cardImage = headerImage ?? myImage;
const titleTemplate = [title, "Christopher Vachon"]
    .filter((v) => String(v).trim().length > 0)
    .join(" | ");
const descriptionTemplate = description ?? "All About Christopher Vachon";

import "./../styles/global.css";
---

<html lang="en" class="dark h-full antialiased" style="color-scheme: dark;">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href={`${Astro.site}me-300-1.png`} type="image/png" />
        <title>{titleTemplate}</title>
        <meta name="generator" content={Astro.generator} />
        <meta name="description" content={descriptionTemplate} />
        <meta name="referrer" content="no-referrer-when-downgrade" />
        <link rel="canonical" href={canonical} />

        <meta property="og:site_name" content="All About Christopher Vachon" />
        <meta property="og:type" content="article" />
        <meta property="og:title" content={title} />
        <meta property="og:description" content={descriptionTemplate} />
        <meta property="og:url" content={canonical} />
        {publishDate && <meta property="article:published_time" content={publishDate} />}
        {publishDate && <meta property="article:modified_time" content={publishDate} />}
        <meta property="article:publisher" content="https://github.com/CodeVachon" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={descriptionTemplate} />
        <meta name="twitter:url" content={canonical} />

        <meta name="twitter:label1" content="Written by" />
        <meta name="twitter:data1" content="Christopher Vachon" />
        <meta name="twitter:site" content="@CodeVachon" />
        {
            cardImage && (
                <>
                    <meta name="twitter:image" content={cardImage.src} />
                    <meta
                        property="og:image"
                        content={
                            new RegExp("blog").test(canonical.toString())
                                ? String(canonical).replace(/\/$/, "") + "/og.png"
                                : cardImage.src
                        }
                    />
                    <meta property="og:image:width" content={"1200px"} />
                    <meta property="og:image:height" content={"600px"} />
                </>
            )
        }

        <link
            rel="alternate"
            type="application/rss+xml"
            title="Your Site's Title"
            href={`${Astro.site}rss.xml`}
        />
        <ViewTransitions />
    </head>
    <body
        class="flex h-screen min-w-[350px] flex-col bg-white text-slate-900 lg:flex-row lg:overflow-hidden dark:bg-gray-950 dark:text-slate-50"
    >
        <section
            id="sidebar"
            class:list={[
                "relative sticky top-0 z-[100] flex items-center justify-center transition duration-500 lg:flex-shrink-0",
                sideWidth === "full" ? "lg:w-1/2" : "lg:w-1/3",
                "text-slate-50"
            ]}
        >
            <Glow />
            <div
                id="sidebar-content"
                class="flex w-full items-center justify-between gap-4 p-4 lg:w-auto lg:flex-col lg:items-start lg:justify-center"
            >
                <a
                    href="/"
                    class="flex w-1/3 min-w-[115px] items-center gap-4 decoration-transparent lg:w-full lg:flex-col lg:items-start"
                >
                    <header class="flex items-center gap-4 lg:flex-col lg:items-start">
                        <Picture
                            id="profile-image"
                            class="size-6 min-w-[24px] flex-shrink-0 rounded-full lg:size-64 lg:rounded-2xl"
                            src={myImage}
                            widths={[24, 100, 300, 450]}
                            formats={["webp", "jpg"]}
                            fallbackFormat="jpg"
                            alt="Christopher Vachon"
                            loading="eager"
                        />
                        <h1 class="text-lg font-bold lg:text-2xl">Christopher Vachon</h1>
                    </header>
                </a>
                <nav class="w-1/3 lg:w-full">
                    <ul class="flex justify-center gap-6 lg:flex-col lg:gap-2">
                        {
                            navItems.map((item) => (
                                <li class={item.className ?? ""}>
                                    <a
                                        href={item.href}
                                        class="text-white decoration-transparent transition duration-200 ease-in-out hover:text-white hover:decoration-primary"
                                    >
                                        {item.name}
                                    </a>
                                </li>
                            ))
                        }
                    </ul>
                </nav>
                <nav class="flex w-1/3 justify-end lg:w-full lg:justify-start">
                    <ol class="flex items-center gap-2">
                        {
                            socialMediaItems.map(({ name, href, icon }) => (
                                <li>
                                    <a
                                        href={href}
                                        target="_blank"
                                        title={`Check me out on ${name}`}
                                        class="text-primary hover:text-white"
                                    >
                                        <Icon name={icon} className="size-5" />
                                    </a>
                                </li>
                            ))
                        }
                    </ol>
                </nav>
            </div>
        </section>
        <section
            class="z-[90] flex h-full flex-grow flex-col lg:overflow-auto"
            transition:animate={fade({ duration: "0.8s" })}
        >
            <main class:list={["flex-grow p-6 lg:py-24", className]}>
                {
                    headerImage && (
                        <figure class="-mx-6 -mt-6 mb-6 max-w-[1200px] overflow-hidden lg:-mt-24">
                            <Picture
                                inferSize={true}
                                src={headerImage as any}
                                class="w-full object-cover md:aspect-video"
                                alt={titleTemplate}
                                widths={[320, 640, 1280, 1920]}
                                formats={["webp", "jpg"]}
                                fallbackFormat="jpg"
                                loading="eager"
                            />
                        </figure>
                    )
                }
                <slot />
            </main>
            <footer class="flex max-w-[1200px] items-center gap-6 px-6 py-4">
                <div>
                    <ThemeToggle />
                </div>
                <p class="text-center text-xs text-gray-500 dark:text-gray-400">
                    &copy; {new Date().getFullYear()} Christopher Vachon. All rights reserved.
                </p>
            </footer>
        </section>
        <!-- Google tag (gtag.js) -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-RREP1WR95X"></script>
        <script is:inline>
            window.dataLayer = window.dataLayer || [];
            function gtag() {
                dataLayer.push(arguments);
            }
            gtag("js", new Date());

            gtag("config", "G-RREP1WR95X");
        </script>
    </body>
</html>
